The Arrays.sort() is a built-in method in Java of Arrays class which is used to sort an array in ascending or descending or any other order specified by the user.
1. A Java program to sort an array of integers in ascending order
    Arrays.sort(arr);
2. We can also use sort() to sort a subarray of arr[]
    Arrays.sort(arr, 1, 5);
3. We can also sort in descending order
    Arrays.sort(arr, Collections.reverseOrder());
4. We can also sort an array according to user defined criteria: We use Comparator interface for this purpose.
    import java.util.*;
    class Point
    {
       int x, y;
       Point(int i, int j) {x = i; y = j;}
    }
    class MySort implements Comparator<Point>
    {
        // Used for sorting in ascending order of
        // roll number
        public int compare(Point a, Point b)
        {
            return a.x - b.x;
        }
    }

    // Driver class
    class Main
    {
        public static void main (String[] args)
        {
            Point [] arr = {new Point(10, 20), new Point(3, 12), new Point(5, 7)};
            Arrays.sort(arr, new MySort());
            for (int i=0; i<arr.length; i++)
                System.out.println(arr[i].x + " " + arr[i].y);
        }
    }

The Collections.sort() method is present in Collections class.
It is used to sort the elements present in the specified list of Collection in ascending order.
1. Sorting an ArrayList in ascending order
    Collections.sort(al);
2. Sorting an ArrayList in descending order
    Collections.sort(al, Collections.reverseOrder());
3. Sorting an ArrayList according to user defined criteria: We can use Comparator Interface for this purpose.